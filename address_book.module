<?php

/**
 * @file
 * This file provides basic hooks imlementations.
 */

// Load CRUD functions.
module_load_include('crud.inc', 'address_book');


/**
 * kva
 * Implements hook_menu().
 *
 * @return array
 */
function address_book_menu() {

  $items['address-book'] = array(
    'title' => 'Address book',
    'page callback' => 'drupal_get_form', //drupal_get_form
    'access callback' => 'user_access',
    'access arguments' => array('visit address_book sample page'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['address-book/list'] = array(
    'title' => 'Address book',
    'page callback' => 'address_book_page_address_book', //'address_book_page_address_book', //drupal_get_form
    //'page arguments'=> 'views-form-address-book-page',
    'access callback' => 'user_access',
    'access arguments' => array('visit address_book sample page'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/content/address_book/name/%'] = array(
    'description' => t('Contact page'),
    'page callback' => 'address_book_page_view',
    'page arguments' => array(4),
    'access callback' => 'address_book_access',
    'access arguments' => array(4),
    'type' => MENU_NORMAL_ITEM,
  );
/*
  $items['address-book/add'] = array(
    'title' => 'Fill form',
    'page callback' => 'address_book_form_page',
    'page arguments' => array('address_book'),
    'access callback' => 'user_access',
    'access arguments' => array('visit address_book sample page'),
    'type' => MENU_LOCAL_TASK,
  );
*/
  // Add example entities.
  $items['address-book/addit'] = array(
    'title' => 'Multistep form',
    'page callback' => 'address_book_add',
    //'file' => 'address_book.admin.inc',
    'access arguments' => array('address_book_access'),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  );

  $items['address-book/edit/%'] = array(
    'title' => 'Edit form',
    'page callback' => 'address_book_form_page',
    //'page callback' => 'address_book_edit_form_page',
    'page arguments' => array(2), //
    'access callback' => 'user_access',
    'access arguments' => array('visit address_book sample page'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items ['address-book/delete/%'] = array(
  //'admin/content/address_book/manage/[cid]/delete'] = array(
    'title' => 'Delete',
    //'description' =>t('delete contact'),
    'page callback' => 'address_book_delete_item',
    'page arguments' =>array(2),
    'access arguments' => array('address_book_access'),
    'access callback' => TRUE,
  );

  $items['address-book/ajax/%'] = array(
    'title' => 'Ajax callback',
    'type' => MENU_CALLBACK,
    'page callback' => 'address_book_ajax_callback',
    //'page arguments' => array(2),
    'access arguments' => array('address_book_access'),
    'type' => MENU_CALLBACK,
    'delivery callback' => 'ajax_deliver',
  );

  return $items;
}


function address_book_init() {
  $path = drupal_get_path('module', 'address_book');
  drupal_add_js($path . '/js/address_book.js');
}

function address_book_delete_item($cid) {
  address_book_delete($cid);
  drupal_goto('address-book');
}

/**
 * Ajax callback to display the current time.
 */
function address_book_ajax_callback($cid) {
  // Do any database queries, processing, etc.
  drupal_set_message('Here');
  //Тут застрял намертво,
  $variables = address_book_load($cid);
  //$output = array();
  if ($variables) {
    $address_book_wrapped = entity_metadata_wrapper('address_book', $variables);
    $var = array (
      'notes' => $address_book_wrapped->field_notes->value(),
    );
  }
  //$short = substr($var['notes'], 0, 50);
  $long = $var['notes'];
  //if ($ajax == 'ajax') {
    $commands = array();
    // Ajax command to replace the #ajax-display element with the current time.
    $commands[] = ajax_command_replace('#read-more-l', "<div id='ajax-display'>" . $long . "</div>");
    // Add a visual "changed" marker to the '#ajax-display' element.
    ajax_deliver(array('#type' => 'ajax', '#commands' => $commands));
}

function address_book_add() {
  // Create a basic entity structure to be used and passed to the validation
  // and submission functions.
  $entity = entity_get_controller('address_book')->create();
  return drupal_get_form('address_book_multistep_form', $entity);
}

/**
 * Form function to create an entity_example_basic entity.
 *
 * The pattern is:
 * - Set up the form for the data that is specific to your
 *   entity: the columns of your base table.
 * - Call on the Field API to pull in the form elements
 *   for fields attached to the entity.
 * Fill form new
 */
function address_book_multistep_form($form, &$form_state, $entity, $id = FALSE) {
  //dsm($entity);
  //function address_book_multistep_form($form, &$form_state, $id = FALSE) {
    $form = array();
    //dsm($form_state);
    /*
    if ($id) {
      drupal_sel_message($id);
      drupal_set_breadcrumb(
        array(
          l(t('Home'), '<front>'),
          l(t('Addressbook'), 'address-book'),
          'Edit contact'
        )
      );
  */
    $def = array();
    /*
     * поле image вроде не нужно
        $form['image'] = array(
          '#theme' => 'image_style',
          '#style_name' => 'thumbnail',
          '#path' => file_load($def['fid'])->uri,
        );
    */
    $form_state['step'] = isset($form_state['step']) ? $form_state['step'] : 1;

    // Add a wrapper div that will be used by the Form API to update the form using AJAX
    $form['#prefix'] = '<div id="address_book_multistep_form">';
    $form['#suffix'] = '</div>';

    // Depending on which step of the form we are on, we output different form fields
    switch($form_state['step'])
    {
      // Step 1
      case 1:
        $default_value = '';
        $default_value2 = '';
        if(isset($form_state['values']['first_textfield']))
        {
          $default_value = $form_state['values']['first_textfield'];
          $default_value2 = $form_state['values']['category_field'];
        }
        elseif(isset($form_state['storage']['first_textfield']))
        {
          $default_value = $form_state['storage']['first_textfield'];
          $default_value2 = $form_state['storage']['category_field'];
          //$default_value = $form_state['storage']['field_first_name']['und'][0]['value'];
          //$form_state['field_first_name']['value']['und'][0]['value']=$default_value;
          //$form_state['field']['field_first_name']['und']['instance']['default_value']=$default_value;
        }
/*
        $default_value = $form_state['storage']['field_first_name']['und'][0]['value'];
        $form_state['field']['field_first_name']['und']['instance']['default_value']=$default_value;

        //dsm($form);
        //$form_state['complete form']['field_first_name']['und'][0]['value']='kva';
        //$form_state['complete form']['field_first_name']['und'][0]['value']['#title']='First';
        field_attach_form('address_book', $entity, $form, $form_state);
        //dsm($form_state);

        //$form['field_first_name']['und'][0]['#default_value']='Dart';
        //$form['field_first_name']['und'][0]['value']='Pisetc';
        //working $form['field_first_name']['und'][0]['#title']='dd';

        //dsm($form);
        $form['field_last_name']['#access']=FALSE;
        $form['field_email']['#access']=FALSE;
        $form['field_phone']['#access']=FALSE;
        //$form['field_category']['#access']=FALSE;
        $form['field_notes']['#access']=FALSE;
        $form['field_birthday']['#access']=FALSE;
        $form['field_photo']['#access']=FALSE;
*/
        $form['first_textfield'] = array(
          '#type' => 'textfield',
          '#title' => t('Name'),
          //'#required' => TRUE,
          '#default_value' => $default_value,
        );

        $form['category_field'] = array(
          '#type' => 'select', //change
          '#title' => t('Category'),
          '#options' => array('бизнес' => 'бизнес', 'сослуживцы' => 'сослуживцы', 'друзья' => 'друзья', 'семья' => 'семья'),
          '#default_value' => $default_value2,
        );

        break;

      // Step 2
      case 2:
        $default_value2 = '';
        if(isset($form_state['values']['file']))
        {
          $default_value2 = $form_state['values']['file'];
        }
        elseif(isset($form_state['storage']['file']))
        {
          $default_value2 = $form_state['storage']['file'];
        }

        field_attach_form('address_book', $entity, $form, $form_state);
        //dsm($form_state);
        //$form['field_first_name']['und'][0]['#default_value']='Dart';
        //dsm($form['field_first_name']['und'][0]['#default_value']);

        //drupal_set_message($form['field_photo']['und'][0]['#default_value']['fid']);
        $form['field_first_name']['#access']=FALSE;
        $form['field_last_name']['#access']=FALSE;
        $form['field_email']['#access']=FALSE;
        $form['field_phone']['#access']=FALSE;
        $form['field_category']['#access']=FALSE;
        $form['field_notes']['#access']=FALSE;
        $form['field_birthday']['#access']=FALSE;

        //$form['field_first_name']['#access']=FALSE;
        //drupal_set_message($form_state['values']['field_photo']['und'][0]['fid']);
        //$address_book_wrapped = entity_metadata_wrapper('address_book', $entity);
        //$ff=$address_book_wrapped->field_photo->uri->value();
        //dsm($form);

        break;

      // Step 3
      case 3:
        $default_value = '';
        $default_value1 = '';
        $default_value2 = '';
        $default_value3 = '';
        $default_value4 = '';
        if(isset($form_state['values']['last_name']))
        {
          $default_value = $form_state['values']['last_name'];
          $default_value1 = $form_state['values']['email_field'];
          $default_value2 = $form_state['values']['phone_field'];
          $default_value3 = $form_state['values']['birthday_field'];
          $default_value4 = $form_state['values']['notes_field'];
        }
        elseif(isset($form_state['storage']['last_name']))
        {
          $default_value = $form_state['storage']['last_name'];
          $default_value1 = $form_state['storage']['email_field'];
          $default_value2 = $form_state['storage']['phone_field'];
          $default_value3 = $form_state['storage']['birthday_field'];
          $default_value4 = $form_state['storage']['notes_field'];
          //$form['field_last_name']['value']=$default_value1;
        }
        //dsm($form_state);
        $form['last_name'] = array(
          '#type' => 'textfield',
          '#title' => t('Surname'),
          '#default_value' => $default_value,
        );

        $form['email_field'] = array(
          '#type' => 'textfield',
          '#title' => t('Email'),
          '#default_value' => $default_value1,
        );

        $form['phone_field'] = array(
          '#type' => 'textfield',
          '#title' => t('Phone'),
          '#default_value' => $default_value2,
        );

        $form['birthday_field'] = array(
          '#type' => 'textfield', //change
          '#title' => t('Birthday'),
          '#default_value' => $default_value3,
        );

        $form['notes_field'] = array(
          '#type' => 'textarea', //change
          '#title' => t('Notes'),
          '#default_value' => $default_value4,
        );
/*
        field_attach_form('address_book', $entity, $form, $form_state);
        dsm($form['field_photo']);
        $form['field_category']['#access']=FALSE;
        $form['field_first_name']['#access']=FALSE;
        $form['field_photo']['#access']=FALSE;
        dsm($form_state);
*/
        break;
    }

    // Create a container for our buttons
    $form['buttons'] = array
    (
      '#type' => 'container',
    );
    // If we are on step 1, we do not want a back button
    if($form_state['step'] !== 1)
    {
      $form['buttons']['back'] = array
      (
        '#type' => 'submit',
        '#value' => t('Back'),
        '#limit_validation_errors' => array(),
        '#submit' => array('address_book_multistep_form_back_submit'),
        '#ajax' => array
        (
          'wrapper' => 'address_book_multistep_form',
          'callback' => 'address_book_multistep_form_ajax_callback',
        ),
      );
    }

    if($form_state['step'] !== 3)
    {
      $form['buttons']['forward'] = array
      (
        '#type' => 'submit',
        '#value' => t('Next'),
        '#ajax' => array
        (
          'wrapper' => 'address_book_multistep_form',
          'callback' => 'address_book_multistep_form_ajax_callback',
        ),
      );
    }

    else
    {
      $form['buttons']['submit'] = array
      (
        '#type' => 'submit',
        '#value' => t('Submit'),
        '#ajax' => array
        (
          'wrapper' => 'address_book_multistep_form',
          'callback' => 'address_book_multistep_form_ajax_callback',
        ),
      );
    }

    return $form;
  }


  function address_book_multistep_form_back_submit($form, &$form_state)
  {
    $form_state['step']--;

    $form_state['rebuild'] = TRUE;
  }

  function address_book_multistep_form_submit($form, &$form_state)
  {
    $step = $form_state['step'];
    if($step==1)
    {
      // Изменить свойство
      //$form_state['storage']['first_textfield']=$form_state['values']['first_textfield']['und'][0]['value'];
      //$form_state['storage']['field_first_name']=$form_state['values']['field_first_name'];
      //$form_state['storage']['field_category']=$form_state['values']['field_category'];
      $form_state['storage']['first_textfield']=$form_state['values']['first_textfield'];
      $form_state['storage']['category_field']=$form_state['values']['category_field'];
    }
    elseif($step==2)
    {
      $form_state['storage']['file']=$form_state['values']['field_photo']['und'][0]['fid'];
    }
    //else
    elseif($step==3)
    {
      $form_state['storage']['last_name']=$form_state['values']['last_name'];
      $form_state['storage']['email_field']=$form_state['values']['email_field'];
      $form_state['storage']['phone_field']=$form_state['values']['phone_field'];
      $form_state['storage']['birthday_field']=$form_state['values']['birthday_field'];
      $form_state['storage']['notes_field']=$form_state['values']['notes_field'];
    }
    //$form_state['storage']['step_' . $step] = $form_state['values']['step_' . $step];

    // Check to see if the next/forward button was clicked
    if(isset($form_state['values']['forward']) && $form_state['values']['op'] == $form_state['values']['forward'])
    {
      // Increase the step by one, to move on to the next step
      $form_state['step']++;
    }
    // Check to see if the final step has been submitted
    elseif(isset($form_state['values']['submit']) && $form_state['values']['op'] == $form_state['values']['submit'])
    {
      drupal_set_message(t('Контакт сохранен'));
      //$address_book = entity_ui_form_submit_build_entity($form, $form_state);
      //$address_book->save();
      //drupal_set_message(t('Контакт сохранен'));
      //$form_state['redirect'] = 'address-book';
      //Возвращаемся на первый шаг
      //$form_state['step'] = 1;
      //$form_state['storage'] = array();
    }
    $form_state['rebuild'] = TRUE;
  }

  function address_book_multistep_form_ajax_callback($form, &$form_state)
  {
    return $form;
  }


/**
 * Form submit handler: Submits basic_add_form information.
 */
function address_book_form_addd_submit($form, &$form_state) {
  $entity = $form_state['values']['basic_entity'];
  $entity->field_first_name = $form_state['values']['field_first_name'];
  field_attach_submit('address_book', $entity, $form, $form_state);
  $entity = address_book_save($entity);
  $form_state['redirect'] = 'address-book/add';// . $entity->basic_id;
}

function address_book_form_page($address_book=FALSE, $id=FALSE) {
  return drupal_get_form('address_book_form_add', $id);
}

function address_book_form_add($form, &$form_state, $address_book, $op = 'edit', $id = FALSE) {
  $form = array();
  $arr= array();
  $arr=address_book_entity_info();
  //dsm($arr);
  dsm($address_book);
  //dsm($form_state);
  //$address_book = entity_load(
  //  'typical_entity_example_2',
  //  array($wrapper_1->teid->value())
  //);

  if ($id) {
    drupal_sel_message($id);
    drupal_set_breadcrumb(
      array(
        l(t('Home'), '<front>'),
        l(t('Addressbook'), 'address-book'),
        'Edit contact'
      )
    );

    $def = array();
    $result = db_select('contacts', 'con'); //table_name, alias
    $result->fields('con', array('first_name', 'last_name', 'email', 'phone', 'birthday', 'category', 'notes', 'fid','contact_id'));
    $result->condition('contact_id', $id, '=');
    $result->range(0, 1);
    $result_rows = $result->execute()->fetchAll();
    foreach ($result_rows as $row) {
      $def = array(
        'first_name' => $row->first_name,
        'last_name' => $row->last_name,
        'category' => $row->category,
        'email' => $row->email,
        'phone' => $row->phone,
        'birthday' => $row->birthday,
        'notes' => $row->notes,
        'fid' => $row->fid,
        'contact_id' => $row->contact_id,
      );
    }

    $form['image'] = array(
      '#theme' => 'image_style',
      '#style_name' => 'thumbnail',
      '#path' => file_load($def['fid'])->uri,
    );

    $form['file'] = array(
      '#type' => 'file',
      '#title' => 'Картинка',
      '#description' => 'Выберите файл с расширением jpg, jpeg, png или gif',
      '#default_value' => file_load($def['fid'])->filename,
    );

    $form['contact_id'] = array(
      '#type' => 'hidden',
      '#default_value' => $def['contact_id'],
      //'#hidden' => TRUE,
    );

    $form['first_textfield'] = array(
      '#type' => 'textfield',
      '#title' => t('Name'),
      '#default_value' => $def['first_name'],
    );

    $form['last_name_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Surname field'),
      '#default_value' => $def['last_name'],
    );

    $form['email_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Email'),
      '#default_value' => $def['email'],
    );

    $form['phone_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Phone'),
      '#default_value' => $def['phone'],
    );

    $form['birthday_field'] = array(
      '#type' => 'date_select',
      '#title' => t('Birth date'),
      '#default_value'=>'',
      '#date_format' => 'd m Y ',
      '#date_year_range' => '-100:+0',
      '#date_increment' => '15',
      '#default_value' => $def['birthday'],
    );

    $form['category_field'] = array(
      '#type' => 'select', //change
      '#title' => t('Category'),
      '#options' => array('бизнес' => 'бизнес', 'сослуживцы' => 'сослуживцы', 'друзья' => 'друзья', 'семья' => 'семья'),
      '#default_value' => $def['category'],
    );


    $form['notes_field'] = array(
      '#type' => 'textarea', //change
      '#title' => t('Notes'),
      '#default_value' => $def['notes'],
    );


    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Send'),
    );
  }
  else {
    drupal_set_breadcrumb(
      array(
        l(t('Home'), '<front>'),
        l(t('Addressbook'), 'address-book'),
        'Create contact'
      )
    );
    $form['file'] = array(
      '#type' => 'file',
      '#title' => 'Картинка',
      '#description' => 'Выберите файл с расширением jpg, jpeg, png или gif',
    );

    $form['first_textfield'] = array(
      '#type' => 'textfield',
      '#title' => t('Name'),
    );

    $form['last_name_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Surname field'),
    );


    $form['email_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Email'),
    );

    $form['phone_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Phone'),
    );

    $form['birthday_field'] = array(
      '#type' => 'date_select',
      '#title' => t('Birth date'),
      '#default_value'=>'',
      '#date_format' => 'd m Y ',
      '#date_year_range' => '-100:+0',
      '#date_increment' => '15',
    );

    $form['category_field'] = array(
      '#type' => 'select', //change
      '#title' => t('Category'),
      '#options' => array('бизнес' => 'бизнес', 'сослуживцы' => 'сослуживцы', 'друзья' => 'друзья', 'семья' => 'семья'),
    );


    $form['notes_field'] = array(
      '#type' => 'textarea', //change
      '#title' => t('Notes'),
    );


    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Send'),
    );
  }
  return $form;
}

/**
 * page callback for address-book/list
 * @return array|mixed
 */
function address_book_page_address_book() {
  return drupal_get_form('address_book_form_alter');
}


/**
 * Impliments hook_form_alter
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function address_book_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == "views_form_address_book_page") {
    drupal_set_breadcrumb(array(
      l(t('Home'), '<front>'),
      'Addressbook'
    ));
    $form['Create_contact'] = array(
      '#type' => 'link',
      '#title' => t('Create new contact'),
      '#href' => 'admin/content/address_book/add', // . $node->nid,
      '#weight' => 0,
    );
  }
}

/**
 * Implements hook_access().
 */
function address_book_access($op = NULL, $address_book = NULL, $account = NULL) {
  return user_access('administer site configuration');
}

/**
 * impliments hook_entity_info
 * @return array
 */
function address_book_entity_info() {
  return array(
    'address_book' => array(
      'label' => t('Address book'),
      'base table' => 'address_book',
      'fieldable' => TRUE,
      'entity keys' => array(
        'id' => 'cid',
        'label' => 'title'

      ),
      'bundles' => array(
        'address_book' => array(
          'label' => t('Address book'),
          'admin' => array(
            'path' => 'admin/content/address_book/structure',
            'access arguments' => array('administer site configuration'),
          ),
        ),
      ),
      // Entity API-related parameters.
      'controller class' => 'EntityAPIController',
      'entity class' => 'Entity',
      'admin ui' => array(
        'path' => 'admin/content/address_book',
        'file' => 'address_book.admin.inc',
      ),
      'module' => 'address_book',
      'access callback' => 'address_book_access',
    ),
  );
}

function more_link_form(){
  $form['more'] = array(
    '#type' => 'link',
    '#title' => t('Read more'),
    '#href' => 'address-book/nojs',
    '#prefix' => '<div id="read-more-l">',
    '#suffix' => '</div>',
    '#ajax' => array(
      'effect' => 'fade',
    ),
  );
  return $form;
}

/**
 * page for contact view
 * @param $cid
 * @return array
 */
function address_book_page_view($cid) {
  $variables = address_book_load($cid);
  //$output = array();
  if ($variables) {
    $address_book_wrapped = entity_metadata_wrapper('address_book', $variables);
    //Неудавшаясь попытка отформатировать вывод. не смог добраться до uri поля photo
       $def = array (
         'first_name' => $address_book_wrapped->field_first_name->value(),
         'last_name' => $address_book_wrapped->field_last_name->value(),
         'image' => $address_book_wrapped->field_photo->value(),//value(),//->uri,//->url->value(),
         'category' => $address_book_wrapped->field_category->getPropertyInfo(),//->value()->tid,
         'email' => $address_book_wrapped->field_email->value(),
         'phone' => $address_book_wrapped->field_phone->value(),
         'birthday' => $address_book_wrapped->field_birthday->value(),
         'notes' => $address_book_wrapped->field_notes->value(),

       );
    /*
       //dsm($variables);
       $varim = array(
         'width' => '300px',
         'path' => $var['image'],
       );
       //if (!empty($var)) {
       $output .= '<div><h3>' . $var['first_name']. '</h3></div>';
       $output .= theme('image', $varim);
       $output .= '<div>' . 'Category: ' . $var['category'] . '</div>';
       $output .= '<div>' . 'Email: ' . $var['email'] . '</div>';
       $output .= '<div>' . 'Phone: ' . $var['phone'] . '</div>';
       $output .= '<div>' . 'Birthday: ' . $var['birthday'] . '</div>';
       $output .= '<div>' . 'Notes: ' . $var['notes'] . '</div>';
   */
  }
  $var = array (
    'notes' => $address_book_wrapped->field_notes->value(),
  );

  //$output .= $address_book_wrapped->view();
  $short = substr($var['notes'], 0, 50);
  //Проблема с выводом значенией тянется за мной с прошлого модуля, планирую разобраться в ближайшее
  //время, самому стыдно на такой мелочи тупить

  $form['full_name'] = array(
    '#title' => t('Full name'),
    '#type' => 'textfield',
    '#default_value' => $def['first_name']. ' '.$def['last_name'],
    '#disabled' =>TRUE,
  );

  $form['email_field'] = array(
    '#type' => 'textfield',
    //'#title_display' => 'after',
    '#title' => t('Email'),
    '#default_value' => $def['email'],
    '#disabled' =>TRUE,
  );

  $form['more'] = array(
    '#type' => 'link',
    '#title' => t('Read more'),
    '#prefix' => $short . " ",
    '#href' => 'address-book/ajax/%',
    //'#prefix' => '<div id="read-more-l">',
    '#suffix' => '</div>',
    //'#options' => $cid,
    '#ajax' => array(
      'effect' => 'fade',
    ),
  );


  $output ='<div>' . $short . '</div>';//$form['more'];
  //$output .='<div>' . $lin . '</div>';
  //$output .= '<div>' . 'Notes: ' . $short .'</div>'; //$form['more'] . '</div>';
  //$output .= '<div>' . 'Notes: ' . $short . '<a id ="read-more" href="?q=address-book">Read more</a>'. '</div>';
  //return $output;
  return $form;
}

function address_book_form_add_submit(&$form, &$form_state, $address_book) {
  //dsm($form_state);
  $file = $form_state['values']['file'];
  $file->status = FILE_STATUS_PERMANENT; // Изменяем статус файла на "Постоянный"
  file_save($file); // Сохраняем новый статус
  drupal_set_message('Картинка загружена');

  global $user;
  // Изменить свойство
  //$node_wrapper = entity_metadata_wrapper('address_book', $address_book);
  //$first_name = $node_wrapper->field_first_name->value();
  //$node_wrapper->save();
  $address_book = entity_ui_form_submit_build_entity($form, $form_state);

  $address_book->save();

  $form_state['redirect'] = 'address-book';

}

/**
 * hook_views_bulk_operations_form_alter().
 */
function address_book_views_bulk_operations_form_alter(&$form, &$form_state, $vbo) {

  if ($form_state['step'] == 'views_form_views_form') {
    //dsm($form);
    $form['actions']['action::views_bulk_operations_delete_item'] = $form['select']['action::views_bulk_operations_delete_item'];
    $form['select']['action::views_bulk_operations_delete_item']['#printed'] = TRUE;
    $form['actions']['submit']['#access'] = FALSE;
    $form['actions']['#access'] = TRUE;
  }

}
